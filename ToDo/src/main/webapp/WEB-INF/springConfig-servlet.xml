<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	 xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	 	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	 	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        ">
	<!-- bean definitions here -->
	<context:component-scan base-package="com.fundoonotes"/>
	<tx:annotation-driven transaction-manager="transactionManager"/>	
	<mvc:annotation-driven />
			
		<mvc:interceptors>
			
			<mvc:interceptor>
				<mvc:mapping path="/note/**"/>
				<bean class="com.fundoonotes.utilservice.NotesInterceptor" />
			</mvc:interceptor>
			
			<mvc:interceptor>
				<mvc:mapping path="/user/**"/>
				<bean class="com.fundoonotes.utilservice.UserInterceptor" />
			</mvc:interceptor>
			
		</mvc:interceptors>	
			
			
			
	<bean id="userDao" class="com.fundoonotes.userservice.UserDaoImpl" />
	<bean id="userService" class="com.fundoonotes.userservice.UserServiceImpl" />
	<bean id="noteService" class="com.fundoonotes.noteservice.NoteServiceImpl" />
	<bean id="noteDao" class="com.fundoonotes.noteservice.notesDaoImpl" />
	<bean id="fbConnection" class="com.fundoonotes.sociallogin.facebookConnection" />
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${dbdriver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${dbuser}" />
		<property name="password" value="${dbpassword}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="userValidation" class="com.fundoonotes.utilservice.UserValidation" />
	<bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
		<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="${userId}" />
		<property name="password" value="${password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
			
			
		</property>
	</bean>

	<bean id="userMail" class="com.fundoonotes.utilservice.MailService">
		<property name="mailSender" ref="mailSender" />
	</bean>

	<bean id="emailService" class="com.fundoonotes.utilservice.EmailProperties">
		<property name="email" value="${userId}" />
		<property name="password" value="${password}" />
		<property name="emailAddress" value="${emailAddress:#{null}}" />
		<property name="host" value="${host}"/>
	</bean>
	
	<bean id="token" class="com.fundoonotes.utilservice.TokenUtil"/>
	
	<!-- import different variables according to active profile -->

	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true" location="classpath*:/development.properties" />
	</beans>
	
	
<!-- <beans profile="test"> <context:property-placeholder ignore-resource-not-found="true" 
		location="classpath*:/test.properties" /> </beans> <beans profile="production"> 
		<context:property-placeholder ignore-resource-not-found="true" location="classpath*:/production.properties" 
		/> </beans> -->


	<!-- <bean id="mailHelperService" class="com.bridgelabz.service.MailHelperService"> 
		<property name="mailSender" ref="mailSender" /> </bean> -->

</beans>	